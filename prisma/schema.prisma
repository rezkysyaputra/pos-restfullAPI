// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  username String @unique @db.VarChar(255)
  fullName String @db.VarChar(255)
  email String @unique
  role Role @default(CASHIER) 
  password String @db.VarChar(100)

  orders Order[]

  @@map("users")
}
 
enum Role {
  CASHIER
  ADMIN
}

model Category {
  id Int @id @default(autoincrement())
  name String @unique  @db.VarChar(255)

  products Product[]

  @@map("categories")
}

model Product {
  id Int @id @default(autoincrement())
  sku Int @unique
  name String @db.VarChar(100)
  stock Int
  price Float
  image String
  categoryId Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orderProducts OrderProduct[]

  category Category? @relation(fields: [categoryId], references: [id])
  @@map("products")
}

model OrderProduct {
  id Int @id @default(autoincrement())
  orderId Int
  productId Int
  quantity Int
  totalPrice Float

  product Product @relation(fields: [productId], references: [id])
  order Order @relation(fields: [orderId], references: [id])
  @@map("order_products")
}

model Payment {
  id Int @id @default(autoincrement())
  name String @unique  @db.VarChar(100)
  type String @db.VarChar(100)
  orders Order[]
  @@map("payments")
}

model Order {
  id Int @id @default(autoincrement())
  username String @db.VarChar(100)
  paymentId Int
  name  String @db.VarChar(100)
  totalPrice Float
  totalPaid Float
  totalReturn Float
  receiptId String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  order_products OrderProduct[]

  payment Payment @relation(fields: [paymentId], references: [id])
  user User @relation(fields: [username], references: [username])
  @@map("orders")
}